---
- name: Uninstall old versions of docker
  become: yes
  ansible.builtin.apt:
    name: ['docker', 'docker-engine', 'docker.io']
    state: absent

- name: Install dependencies
  become: yes
  ansible.builtin.apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'python-setuptools', 'software-properties-common']
    state: latest
    install_recommends: no
    update_cache: yes

- name: Add Docker apt repository key
  become: yes
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repository and update apt cache
  become: yes
  ansible.builtin.apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    mode: '644'
    update_cache: yes
    state: present

- name: Install docker
  become: yes
  ansible.builtin.apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: latest
    install_recommends: no
    update_cache: yes

- name: Install docker-compose
  become: yes
  ansible.builtin.pip:
    name: ['docker-compose']
    state: latest

- name: Make sure docker.service.d
  file:
    path: "/etc/systemd/system/docker.service.d"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  become: yes

- name: Configure Docker proxy
  template:
    src: "../template/http-proxy.conf.j2"
    dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
    owner: "root"
    group: "root"
    mode: "0644"
  when: (ansible_service_mgr == 'systemd' and
    (proxy_env.http_proxy is defined or proxy_env.https_proxy is defined))
  become: yes

# Restart all
# Restart systemd daemons
- name: Reload systemd daemons
  command: systemctl daemon-reload
  become: yes

# Restart Docker daemon
- name: Restart docker daemon
  command: systemctl restart docker
  become: yes

# Restart Docker daemon
- name: Restart docker
  service:
    name: docker
    state: restarted
  become: yes